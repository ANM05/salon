/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package salon;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import spark.ModelAndView;
import spark.template.velocity.VelocityTemplateEngine;
import static spark.Spark.*;


public class App {


    public static void main(String[] args) {
        staticFileLocation("/public");
        String layout = "templates/layout.vtl";

        get("/", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            model.put("template", "templates/index.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());
        get("/stylists/new", (request, response) ->{
            Map<String, Object> model = new HashMap<String, Object>();
            model.put("template", "templates/stylist-form.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());
        post("/stylists", (request, response) ->{
            Map<String, Object> model = new HashMap<String, Object>();
            String name = request.queryParams("name");
            String mobile= request.queryParams("mobile");
            String email = request.queryParams("email");
            Stylist newStylist = new Stylist(name, mobile, email);
            newStylist.save();
            model.put("template", "templates/stylist-success.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());
        get("/stylists", (request, response) ->{
            Map<String, Object> model = new HashMap<String, Object>();
            model.put("stylists", Stylist.allStylists());
            model.put("template", "templates/stylist.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());
    }
}
